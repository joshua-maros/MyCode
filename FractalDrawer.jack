class FractalDrawer {
    function void draw(int resolution) {
        var Complex c, z, znext;
        var Float scratch, scale, sx, sy;
        var int x, y, iterations;
        var boolean ok;

        let scale = Float.fromRaw(true, 73, -9);

        let y = -resolution;
        while (y > -65) {
            let x = -256;
            while (x < 256) {
                let sx = Float.fromInt(x - 300 + (resolution / 2));
                let sy = Float.fromInt(y + (resolution / 2));
                let c = Complex.fromRaw(
                    scale.multiply(sx),
                    scale.multiply(sy)
                );
                do sx.dispose();
                do sy.dispose();
                let z = Complex.fromInt(0);
                let iterations = 20;
                let ok = true;
                while (ok & (iterations > 0)) {
                    let znext = z.multiply(z);
                    do z.dispose();
                    let z = znext.add(c);
                    do znext.dispose();
                    let scratch = z.abs();
                    if (scratch.getExponent() > 16) {
                        let ok = false;
                    }
                    do scratch.dispose();
                    let iterations = iterations - 1;
                }
                do Screen.setColor(~ok);
                do Screen.drawRectangle(x + 256, y + 128, x + 256 + resolution - 1, y + 128 + resolution - 1);
                do Screen.drawRectangle(x + 256, -y + 128 - resolution, x + 256 + resolution - 1, -y + 128 - 1);
                let x = x + resolution;
                do c.dispose();
                do z.dispose();
            }
            let y = y - resolution;
        }

        return;
    }
}
